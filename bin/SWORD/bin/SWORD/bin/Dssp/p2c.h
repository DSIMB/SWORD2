#ifndef P2C_H
#define P2C_H


/* Header file for code generated by "p2c", the Pascal-to-C translator */

/* "p2c"  Copyright (C) 1989, 1990, 1991 Free Software Foundation.
 * By Dave Gillespie, daveg@csvax.cs.caltech.edu.  Version 1.19.
 * This file may be copied, modified, etc. in any way.  It is not restricted
 * by the licence agreement accompanying p2c itself.
 */


#include <stdio.h>
#ifdef HAVE_MEMORY_H
# include "memory.h"
#endif

#ifdef STDC_HEADERS
#include <stddef.h>
#else
#include <sys/types.h>		/* For size_t */
#endif

#define SETBITS  32

typedef void *Anyptr;

#ifndef true
# define true    1
# define false   0
#endif


extern int      P_eof       (FILE *);
extern int      P_eoln      (FILE *);
extern long    *P_setunion  (long *, long *, long *);
extern long    *P_setdiff   (long *, long *, long *);
extern int      P_inset     (unsigned, long *);
extern int      P_setequal  (long *, long *);
extern long    *P_addset    (long *, unsigned);
extern long    *P_setcpy    (long *, long *);
extern long    *P_expset    (long *, long);

/* Fix ANSI-isms */

#ifndef HAVE_MEMCPY
#  ifdef HAVE_BCOPY
#    define memcpy(d, s, n) bcopy ((s), (d), (n))
#  else
#    define memcpy  my_memcpy
#    define NEED_MY_MEMCPY
     extern Anyptr my_memcpy (Anyptr, Anyptr, size_t);
#  endif
#endif

#endif    /* P2C_H */



/* End. */


